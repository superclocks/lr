/*************************************************************************
	> File Name: sgd.cpp
	> Author: ma6174
	> Mail: ma6174@163.com 
	> Created Time: 2015年05月27日 星期三 08时57分13秒
 ************************************************************************/

#include <iostream>
#include <math.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "loss_func.h"
using namespace std;

typedef double (*obj_pt)(double* x, double* w, int n);
typedef void (*grad_pt)(double* x, double y, double* w, int n, double* g);

//path输入文件路径
//m样本个数
//n特征个数
void meanGrad(char* path,grad_pt grad1, int m, int n, double* w, double* mg)
{
	double* g = (double*)malloc(sizeof(double) * n); //每个样本的梯度
	double* xi = (double*)malloc(sizeof(double) * n); //存储每个样本
	memset(g, 0, sizeof(double) * n);
	memset(xi, 0, sizeof(double) * n);
	memset(mg, 0, sizeof(double) * n);
	FILE* fp = fopen(path, "r");
	if(fp == NULL)
	{
		printf("the input file can't be opened");
		exit(1);
	}
	else
	{	
		int i, j, k;
		for(i = 0; i < m; i++)
		{	
			double yi;
			fscanf(fp, "%lf", &yi);
			xi[0] = 1.0;
			for(j = 1; j < n; j++)
			{
				double t;
				fscanf(fp, "%lf", &t);
				xi[j] = t;
			}
			grad1(xi, yi, w, n, g);
			for(k = 0; k < n; k++)
			{
				mg[k] += g[k]; 
			}
		}
		for(k = 0; k < n; k++)
		{
			mg[k] = mg[k] / m;
		}
	}
	free(g);
	free(xi);
	fclose(fp);
}

void update(double* w0, double* g1, double* g2, double* mg, int n, double rat, int k)
{
	int i;
	for(i = 0; i < n; i++)
	{
		w0[i] = w0[i] - (rat / sqrt(k + 1)) * (g1[i] - g2[i] + mg[i]);
	}
}

void svrgTrain(char* path, obj_pt obj1, grad_pt grad1, int m, int n, int k, double rat, double tol, double* w)
{
	int i, j, t;
	n = n + 1;
	double* mg = (double*)malloc(sizeof(double) * n);
	double* w0 = (double*)malloc(sizeof(double) * n);
	//double* w = (double*)malloc(sizeof(double) * n);
	double* g1 = (double*)malloc(sizeof(double) * n);
	double* g2 = (double*)malloc(sizeof(double) * n);
	double* xi = (double*)malloc(sizeof(double) * n);

	memset(mg, 0, sizeof(double) * n);
	memset(w, 0, sizeof(double) * n);
	memcpy(w0, w, sizeof(double) * n);
	FILE* fp = fopen(path, "r");
	for(i = 0; i < k; i++)
	{
		meanGrad(path, grad1, m, n, w, mg);
		for(j = 0; j < m; j++)
		{
			double yi;
			fscanf(fp, "%lf", &yi);
			xi[0] = 1.0;
			for(t = 1; t < n; t++)
			{
				double v;
				fscanf(fp, "%lf", &v);
				xi[t] = v;				
			}
			grad1(xi, yi, w0, n, g1);
			grad1(xi, yi, w, n, g2);
			update(w0, g1, g2, mg, n, rat, j); //更新w0
		}
		memcpy(w, w0, sizeof(double) * n);
		fseek(fp, 0, 0);//将文件指针移动到开头
	}
	fclose(fp);
	free(mg);
	free(w0);
	//free(w);
	free(g1);
	free(g2);
	free(xi);
}
void predictor(char* path, double* w, int n)
{
	n = n + 1;
	FILE* fp = fopen(path, "r");
	if(fp == 0)
	{
		printf("can't open file: %s\n", path);
		exit(1);
	}
	int i, ii;
	int err = 0;
	double* xi = (double*)malloc(sizeof(double) * n);
	for(ii = 0; ii < 300; ii++)
	{
		double yi;
		fscanf(fp, "%lf", &yi);
		xi[0] = 1.0;
		for(i = 1; i < n; i++)
		{
			double t;
			fscanf(fp, "%lf", &t);
			xi[i] = t;
		}
		double p = sigmoid(xi, w, n);
		int r = 0;
		if(p > 0.5)
		{
			r = 1;
		}
		if(yi != r)
			err++;
	}
	free(xi);
	fclose(fp);
	printf("the err number is: %d\n", err);
}
